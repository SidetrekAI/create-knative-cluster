// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./configuration";
export * from "./revision";
export * from "./route";
export * from "./service";

// Import resources to register:
import { Configuration } from "./configuration";
import { Revision } from "./revision";
import { Route } from "./route";
import { Service } from "./service";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:serving.knative.dev/v1:Configuration":
                return new Configuration(name, <any>undefined, { urn })
            case "kubernetes:serving.knative.dev/v1:Revision":
                return new Revision(name, <any>undefined, { urn })
            case "kubernetes:serving.knative.dev/v1:Route":
                return new Route(name, <any>undefined, { urn })
            case "kubernetes:serving.knative.dev/v1:Service":
                return new Service(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "serving.knative.dev/v1", _module)
